const utils={};async function userDetectedData(){try{const t=await utils.getIp(!0);let o={};if("string"==typeof t.location)try{o=JSON.parse(t.location)}catch(t){console.error("Error parsing location data:",t),o={}}else o=t.location||{};const e={countryCode:o.cca2||"No Information",city:o.city||"No Information",location:o||{},country:t.country||"No Information",ip:t.ip||"No Information"};localStorage.setItem("userFetchedData",JSON.stringify(e)),setCookie("userFetchedData",JSON.stringify(e),36500)}catch(t){console.error("Error fetching user info:",t)}}function setCookie(t,o,e){const n=new Date;n.setTime(n.getTime()+24*e*60*60*1e3),document.cookie=`${t}=${encodeURIComponent(o)}; expires=${n.toUTCString()}; path=/; SameSite=Lax`}function getCookie(t){const o=document.cookie.split("; ");for(let e=0;e<o.length;e++){const[n,c]=o[e].split("=");if(n===t)return decodeURIComponent(c)}return null}!function(t,o){const e=async()=>{if(n.country||(n.country=await fetch(n.json.country).then(t=>t.json())),!n.locations){const t=await fetch(n.json.locations).then(t=>t.json());n.locations=Array.isArray(t)?t:[]}return{country:n.country,locations:n.locations}},n=async(t=!1)=>{if(t&&n.last)return n.last;try{const t=await fetch(n.trace).then(t=>t.text()),o=n.map,e=n.exclude,c=t.trim().split("\n").reduce((t,o)=>{const[e,n]=o.split("=").map(t=>t.trim());return e&&(t[e]="ts"===e?1e3*+n:n),t},{});c.location=await n.getLocation(c.colo),c.country=await n.getCountry(c.loc);const r=Object.keys(c).reduce((t,n)=>{const r=n in o?o[n]:n;return r&&!e.includes(r)&&Object.defineProperty(t,r,{value:c[n]}),t},{});return n.last=r,r}catch(t){throw console.error("Error processing trace data:",t),t}};Object.assign(n,{trace:"https://www.cloudflare.com/cdn-cgi/trace",json:{locations:"https://raw.githubusercontent.com/Netrvin/cloudflare-colo-list/main/locations.json",country:"https://raw.githubusercontent.com/Netrvin/cloudflare-colo-list/main/country.json"},map:{ts:"timestamp",visit_scheme:"visitScheme",uag:"userAgent"},exclude:["h"],locations:null,country:null,last:null}),Object.defineProperties(n,{getList:{value:e},getCountry:{value:async t=>{if("string"==typeof t&&t.trim()){const{country:o}=await e();if("string"==typeof o[t])return o[t]}return null}},getLocation:{value:async t=>{if("string"==typeof t&&t.trim()){const{locations:o}=await e();return o.find(o=>o.iata===t)||null}return null}}}),Object.defineProperty(t,"getIp",{value:n})}(utils),userDetectedData();
